<launch>
    <machine name="chassis-main"
        address="lynxmotion"
        env-loader="/opt/a4wd2/a4wd2_env.sh"
        default="never" />

    <node name="sensor_publisher"
          pkg="a4wd2" type="sensor_publisher"
          machine="chassis-main"
          required="true"
          args="/dev/arduino-micro" />

    <!-- rplidar laser scanner -->
    <node name="rplidarNode"
          pkg="rplidar_ros"
          type="rplidarNode"
          machine="chassis-main"
          required="true" >
        <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
        <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
        <param name="frame_id"            type="string" value="laser"/>
        <param name="inverted"            type="bool"   value="false"/>
        <param name="angle_compensate"    type="bool"   value="true"/>
    </node>

    <node pkg="rosbag" type="record" name="record_all"
          args="record -o lynxmotion_record_all --lz4 -a"
          machine="chassis-main" required="true" />

    <node pkg="tf2_ros" type="static_transform_publisher" name="laser_transform"
          args="0 0 0 0 0 0 base_link laser"
          machine="chassis-main" required="true" />

    <node pkg="a4wd2" name="key_controller" type="key_controller" />

    <!-- rviz visualisation -->
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder $(find a4wd2)/urdf/lynxmotion.urdf" />
    <node pkg="rviz" name="rviz" type="rviz"
          args="-d $(find a4wd2)/rviz/lynxmotion.rviz" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <node pkg="rf2o_laser_odometry" type="rf2o_laser_odometry_node" name="rf2o_laser_odometry"
          machine="chassis-main"
          required="true" >
        <param name="laser_scan_topic" value="/scan"/>          # topic where the lidar scans are being published
        <param name="odom_topic" value="/odom_rf2o" />          # topic where tu publish the odometry estimations
        <param name="publish_tf" value="true" />                # wheter or not to publish the tf::transform (base->odom)
        <param name="base_frame_id" value="/base_link"/>        # frame_id (tf) of the mobile robot base. A tf transform from the laser_frame to the base_frame is mandatory
        <param name="odom_frame_id" value="/odom" />            # frame_id (tf) to publish the odometry estimations
        <param name="init_pose_from_topic" value="" />          # (Odom topic) Leave empty to start at point (0,0)
        <param name="freq" value="10.0"/>                       # Execution frequency.
        <param name="verbose" value="false" />                  # verbose
    </node>
</launch>
